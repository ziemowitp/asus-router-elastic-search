module(load="omelasticsearch")

template(name="plain-syslog" type="list") {
    constant(value="{")
    property(outname="@timestamp" name="timereported" dateFormat="rfc3339" format="jsonf")
    constant(value=",")
    property(outname="host" name="hostname" format="jsonf")
    constant(value=",")
    property(outname="severity-num" name="syslogseverity" format="jsonf")
    constant(value=",")
    property(outname="facility-num" name="syslogfacility" format="jsonf")
    constant(value=",")
    property(outname="severity" name="syslogseverity-text" format="jsonf")
    constant(value=",")
    property(outname="facility" name="syslogfacility-text" format="jsonf")
    constant(value=",")
    property(outname="syslogtag" name="syslogtag" format="jsonf")
    constant(value=",")
    property(outname="type" name="msg" field.number="2" field.delimiter="32" format="jsonf")
    constant(value=",")
    property(outname="IN" name="msg" regex.expression="IN=([^[:space:]]*)" regex.submatch="1" regex.                    type="ERE" format="jsonf" onEmpty="keep")
    constant(value=",")
    property(outname="OUT" name="msg" regex.expression="OUT=([^[:space:]]*)" regex.submatch="1" rege                    x.type="ERE" format="jsonf" onEmpty="keep")
    constant(value=",")
    property(outname="MAC" name="msg" regex.expression="MAC=([^[:space:]]*)" regex.submatch="1" rege                    x.type="ERE" format="jsonf" onEmpty="keep")
    constant(value=",")
    property(outname="SRC" name="msg" regex.expression="SRC=([^[:space:]]*)" regex.submatch="1" rege                    x.type="ERE" format="jsonf" onEmpty="keep")
    constant(value=",")
    property(outname="DST" name="msg" regex.expression="DST=([^[:space:]]*)" regex.submatch="1" rege                    x.type="ERE" format="jsonf" onEmpty="keep")
    constant(value=",")
    property(outname="LEN" name="msg" regex.expression="LEN=([^[:space:]]*)" regex.submatch="1" rege                    x.type="ERE" format="jsonf" onEmpty="keep")
    constant(value=",")
    property(outname="PROTO" name="msg" regex.expression="PROTO=([^[:space:]]*)" regex.submatch="1"                     regex.type="ERE" format="jsonf" onEmpty="keep")
    constant(value=",")
    property(outname="message" name="msg" format="jsonf")
    constant(value="}")
}

template(name="logstash-index" type="string" string="asus-%$YEAR%.%$MONTH%.%$DAY%")

action(type="omelasticsearch"
  server="<address>:9200"
  template="plain-syslog"
  searchIndex="logstash-index"
  dynSearchIndex="on"
  bulkmode="on"
  errorfile="/var/log/omelasticsearch.log")
